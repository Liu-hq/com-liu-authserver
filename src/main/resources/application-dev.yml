defaultCatalog: "oauth"

server:
  port: 8060

eureka:
  instance:
    hostname: localhost000
  client:
    serviceUrl:
      defaultZone: http://discoveryservice.dev.saas.dyrs.online/eureka/
spring:
  application:
    name: com.liu.authserver
  redis:
    timeout: "3000"
    host: "172.16.105.145"
    password: ""
    port: "6379" #最小空闲数
    jedis:
      pool:
        maxIdle: "200" #最大空闲数
        max-active: "1024" #最大连接数
        max-wait: "10000" #最大建立连接等待时间
        min-idle: "20"
#  kafka:
#    listener:
#      poll-timeout: 6000
#    producer:
#      acks: 0
#      key-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
#      value-serializer: org.apache.kafka.common.serialization.ByteArraySerializer
#    consumer:
#      group-id: "com-liu"
#      auto-offset-reset: "earliest"
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#    bootstrap-servers: "172.16.105.145:9092"
  datasource:
    druid: #druid数据源
      url: jdbc:mysql://localhost/${defaultCatalog}?useUnicode=true&characterEncoding=UTF-8&createDatabaseIfNotExist=true
      username: "root"
      password: "root"
      driver-class-name: "com.mysql.jdbc.Driver"
      initialSize: 5
      minIdle: 5
      maxActive: 20
      maxWait: 60000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      filters: stat,wall
      filter:
        stat:
          log-slow-sql: true
          slow-sql-millis: 5000
  thymeleaf:
    mode: HTML5
  sleuth:
    enabled: true
    sampler:
      percentage: 1.0
  cloud:
    stream:
      kafka:
        binder:
          brokers: 172.16.105.145:9092
          zkNodes: 172.16.105.145:2181
        bindings:
          output:
            destination: someTopic
            contentType: application/*+avro
            producer:
              useNativeEncoding: true
              partitionKeyExpression: payload.id
              partitionCount: 5
          input:
            destination: someTopic
            contentType: application/vnd.someType.v1+avro
            group: someInputGroup
            consumer:
              resetOffsets: true
              headerMode: raw
              partitioned: true
              concurrency: 3
log:
  path: D:\logs
  level: INFO


